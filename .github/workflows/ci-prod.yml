# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI Prod

on:
  push:
   branches: [master]
  # pull_request:
  #   branches: [master]

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'
        name: Install dependencies
  test:
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'
        name: Install dependencies
      - run: npm test
        name: Running tests
      - uses: actions/upload-artifact@v3 # upload test results
        if: success() || failure() # run this step even if previous step failed
        with:
          name: test-results
          path: testResults/TESTS.xml
  build:
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'
        name: Install dependencies
      - run: npm run build --if-present
        name: Build application
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: build-files
          path: dist
          
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    if:  ${{ !contains(github.event.pull_request.labels.*.name, 'github-actions') }}
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: build-files
          path: dist
      - uses: FirebaseExtended/action-hosting-deploy@v0
        name: Preview Deployment
        if: github.event_name == 'pull_request'
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_GAMEANALYSIS_MGM12 }}"
          projectId: gameanalysis-mgm12
          expires: 3d
      - uses: FirebaseExtended/action-hosting-deploy@v0
        name: Deploy 2 prod
        if: github.event_name != 'pull_request'
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_GAMEANALYSIS_MGM12 }}"
          projectId: gameanalysis-mgm12
          channelId: live
